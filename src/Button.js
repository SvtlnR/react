import React, { Component } from 'react';
import './Button.css';

class Button extends Component {
  constructor(props){
    super(props);
    this.state={mes:''};
  }
  gener(){
    var fph=['Уважаемые коллеги ','С другой стороны ', 'Равным образом ','Не следует, однако, забывать ',
    'Таким образом ', 'Повседневная практика показывает, что ', 'Значимость этих проблем настолько очевидна ',
    'Разнообразный и богатый опыт ', 'Задачи организации в особенности же ', 'Идейны соображения высшего порядка, а также '];
    var frst= fph[Math.floor(Math.random() * fph.length)];
    var sph=['реализация намеченных планновых заданий ','рамки и место обучения кадров ',
    'постоянный количественный рост и сфера нашей активности ','сложившаяся структура организации','новая модель организационной деятельности ',
    'дальнейшее развитие различных форм деятельности ', 'постоянное информационное обеспечение нашей деятельности ',
    'укреление и развитие структуры ','консультация с широким активом ','начало повседневной работы по формированию позиций '];
    var scnd= sph[Math.floor(Math.random() * sph.length)];
    var tph=['играет важную роль в формировании ','требуют от нас анализа ','требуют определение и уточнения ','способствуют подготовке и реализации ',
    'обеспечивает широкому кругу специалистов участие в формировании ','позволяет выполнить важные задания по разработке ',
    'в значительной мере обуславливает создание ', 'позволяет оценить значение ','представляет собой интересный эксперимент проверки ',
    'влечет за собой процесс внедрения и модернизации '];
    var thrd= tph[Math.floor(Math.random() * tph.length)];
    var frph=['существующих финансовых и административных условий.','дальнейших направлений развития.','системы массового участия.',
    'позиций, занимаемых участниками в отношении поставленных задач.', 'новых предложений.','направлений прогрессивного развития.',
    'системы обучения кадров, соответсвующей насущный потребностям.','соответсвующих условий активизации.','модели развития.','форм воздействия'];
    var frth= frph[Math.floor(Math.random() * frph.length)];
    var phrase=frst+scnd+thrd+frth;
    this.setState({mes:phrase});
    
  }
  render() {
    console.log(this.state.mes);
    return (
      <div>
      <div class="btn" onClick={this.gener.bind(this)}>
        Сгенерировать
      </div>
      <div class="res">
        {this.state.mes}
      </div>
      </div>
    );
  }
}

export default Button;
